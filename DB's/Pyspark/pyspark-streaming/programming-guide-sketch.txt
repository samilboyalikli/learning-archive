
STRUCTURED STREAMING PROGRAMMING GUIDE SKETCH
- [x] Overview (1/1)
- [x] Quick Example (1/1)
- [ ] Programming Model (0/3)
    - [ ] Basic Concepts (0/1)
    - [ ] Handling Event-time and Late Data (0/1)
    - [ ] Fault Tolerance Semantics (0/1)
-  [ ] API using Datasets and DataFrames (0/2)
    - [ ] Creating streaming DataFrames and streaming Datasets (0/2)
        - [ ] Input Sources (0/1)
        - [ ] Schema inference and partition of streaming DataFrames/Datasets (0/1)
    - [ ] Operations on streaming DataFrames/Datasets (0/2)
        - [ ] Basic Operations - Selection, Projection, Aggregation (0/1)
        - [ ] Window Operations on Event Time (0/3)
            - [ ] Handling Late Data and Watermarking (0/1)
            - [ ] Types of time windows (0/1)
            - [ ] Representation of the time for time window (0/1)
        - [ ] Join Operations (0/2)
            - [ ] Stream-static Joins (0/1)
            - [ ] Stream-stream Joins (0/4)
                - [ ] Inner Joins with optional Watermarking (0/1)
                - [ ] Outer Joins with Watermarking (0/1)
                - [ ] Semi Joins with Watermarking (0/1)
                - [ ] Support matrix for joins in streaming queries (0/1)
        - [ ] Streaming Deduplication (0/1)
        - [ ] Policy for handling multiple watermarks (0/1)
        - [ ] Arbitrary Stateful Operations (0/1)
        - [ ] Unsupported Operations (0/1)
        - [ ] State Store (0/2)
            - [ ] HDFS state store provider (0/1)
            - [ ] RocksDB state store implementation (0/3)
                - [ ] RocksDB State Store Memory Management (0/1)
                - [ ] RocksDB State Store Changelog Checkpointing (0/1)
                - [ ] Performance-aspect considerations (0/1)
            - [ ] State Store and task locality (0/1)
    - [ ] Starting Streaming Queries (0/2)
        - [ ] Output Modes (0/1)
        - [ ] Output Sinks (0/1)
            - [ ] Using Foreach and ForeachBatch (0/2)
                - [ ] ForeachBatch (0/1)
                - [ ] Foreach (0/1)
        - [ ] Streaming Table APIs (0/1)
        - [ ] Triggers (0/1)
    - [ ] Managing Streaming Queries (0/1)
    - [ ] Monitoring Streaming Queries (0/3)
        - [ ] Reading Metrics Interactively (0/1)
        - [ ] Reporting Metrics programmatically using Asynchronous APIs (0/1)
        - [ ] Reporting Metrics using Dropwizard (0/1)
    - [ ] Recovering from Failures with Checkpointing (0/1)
    - [ ] Recovery Semantics after Changes in a Streaming Query (0/1)
- [ ] Asynchronous Progress Tracking (0/5)
    - [ ] What is it? (0/1)
    - [ ] How does it work? (0/1)
    - [ ] How to use it? (0/1)
    - [ ] Limitations (0/1)
    - [ ] Switching the setting off (0/1)
- [ ] Continuous Processing (0/1)
- [ ] Additional Information (0/1)
- [ ] Migration Guide (0/1)
